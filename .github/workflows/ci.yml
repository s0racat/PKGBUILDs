# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  schedule:
    - cron: '0 0 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: manjarolinux/base
      volumes:
        - /home/runner/work/PKGBUILDs/PKGBUILDs:/tmp/pkgbuilds

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      # Runs a single command using the runners shell
      - name: Install requirements
        run: |
          pacman-mirrors --fasttrack 5
          pacman -Sy base-devel git wget asp --needed --noconfirm
          sed -i "s|exit \$E_ROOT|#exit \$E_ROOT|" /usr/bin/makepkg

      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Git Submodule Update                                                  
        run: |
          git pull --recurse-submodules
          git submodule update --remote --recursive

      - name: Commit update
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git commit -am "Update version" && git push || echo "No changes to commit"

      - name: Build paru-bin
        run: |
          cd paru-bin
          makepkg -s --noconfirm

      - name: Build nwipe
        run: |
          cd nwipe
          makepkg -s --noconfirm
      
      - name: Build firefox-extension-arch-search
        run: |
          cd firefox-extension-arch-search
          makepkg -s --noconfirm

      - name: Build kernel
        run: |
          sed -i 's/-march=.*/-march=skylake/g' /etc/makepkg.conf
          sed -i 's/MAKEFLAGS=.*/MAKEFLAGS=-j\$\(nproc\)/' /etc/makepkg.conf
          asp export linux-lts
          cd linux-lts
          makepkg -s --noconfirm --skippgpcheck

      - name: Create repo
        run: |
          mkdir repo
          find . -type f -name "*.pkg.tar.zst" -exec cp {} repo/ \;
          cd repo
          repo-add custom.db.tar.gz *.pkg.tar.zst

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: pkgs-x86_64
          path: repo

  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:

      - uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: pkgs-x86_64

      - name: Create release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          files: |
            *.tar.*
            custom.db
            custom.files

